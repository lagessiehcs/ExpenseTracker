import csv
import random
import string

users_number  = 500
groups_number = 100
transactions_number = 1000 

min_group_members_count = 2
max_group_members_count = 50

min_expense_amount = 10
max_expense_amount = 500

min_char_in_name_count = 5
max_char_in_name_count = 10

def generate_random_username():
    return ''.join(random.choices(string.ascii_letters, k=random.randint(min_char_in_name_count, max_char_in_name_count)))

def generate_auto_file(users_count=users_number, groups_count=groups_number, transactions_count=transactions_number ):
    # Generate random user data
    users = [ f'User_{i}' for i in range(users_count)]

    # Generate random group data
    groups = [{'GroupName': f'Group_{i}', 'Members': random.sample(users, random.randint(min_group_members_count, max_group_members_count))} for i in range(groups_count)]

    # Generate random expenses with multiple receivers
    expenses = []
    for i in range(transactions_count):
        group = random.choice(groups)
        expense =  {'Group': group['GroupName'],
                    'Sender': random.choice(group['Members']),
                    'Receivers': random.sample([user for user in group['Members']], random.randint(1, min(30,len(group['Members'])))),
                    'Amount': random.randint(min_expense_amount, max_expense_amount)}
        expenses.append(expense)

    # Write data to CSV file
    with open('autogenerated_file.csv', mode='w', newline='') as file:
        writer = csv.writer(file)

        # Write user data
        writer.writerow(['Users'])
        for user in users:
            writer.writerow([user])

        # Write group data
        writer.writerow(['Groups'])
        for group in groups:
            members = ','.join(member for member in group['Members'])
            writer.writerow([group['GroupName'], members])

        # Write expenses
        writer.writerow(['Expenses'])
        for expense in expenses:
            receivers = ','.join(expense['Receivers'])
            writer.writerow([expense['Group'], expense['Sender'], receivers, expense['Amount']])

if __name__ == "__main__":
    generate_auto_file()
